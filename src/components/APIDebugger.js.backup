import React, { useState } from 'react';
import apiService from '../services/apiService';

const APIDebugger = () => {
  const [response, setResponse] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const testProductsAPI = async () => {
    setLoading(true);
    setError(null);
    setResponse(null);

    try {
      console.log('Testing products API...');
      const result = await apiService.getProducts({ page: 1, limit: 5 });
      console.log('Raw API Response:', result);
      setResponse(result);
    } catch (err) {
      console.error('API Error:', err);
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ padding: '20px', border: '1px solid #ccc', margin: '20px' }}>
      <h3>API Response Debugger</h3>
      
      <button onClick={testProductsAPI} disabled={loading}>
        {loading ? 'Testing...' : 'Test Products API'}
      </button>

      {error && (
        <div style={{ color: 'red', marginTop: '10px' }}>
          <strong>Error:</strong> {error}
        </div>
      )}

      {response && (
        <div style={{ marginTop: '20px' }}>
          <h4>Response Type:</h4>
          <p>{Array.isArray(response) ? 'Array' : typeof response}</p>
          
          <h4>Response Keys:</h4>
          <p>{typeof response === 'object' ? Object.keys(response).join(', ') : 'N/A'}</p>
          
          <h4>Raw Response:</h4>
          <pre style={{ background: '#f5f5f5', padding: '10px', overflow: 'auto' }}>
            {JSON.stringify(response, null, 2)}
          </pre>
        </div>
      )}
    </div>
  );
};

export default APIDebugger;
